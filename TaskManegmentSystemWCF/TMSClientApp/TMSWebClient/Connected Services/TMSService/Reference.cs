//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TMSWebClient.TMSService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/TMSService")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string roleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string role {
            get {
                return this.roleField;
            }
            set {
                if ((object.ReferenceEquals(this.roleField, value) != true)) {
                    this.roleField = value;
                    this.RaisePropertyChanged("role");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Task", Namespace="http://schemas.datacontract.org/2004/07/TMSService")]
    [System.SerializableAttribute()]
    public partial class Task : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string assignedToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lastDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string priorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string statusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string subjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string timeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string assignedTo {
            get {
                return this.assignedToField;
            }
            set {
                if ((object.ReferenceEquals(this.assignedToField, value) != true)) {
                    this.assignedToField = value;
                    this.RaisePropertyChanged("assignedTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lastDate {
            get {
                return this.lastDateField;
            }
            set {
                if ((object.ReferenceEquals(this.lastDateField, value) != true)) {
                    this.lastDateField = value;
                    this.RaisePropertyChanged("lastDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string priority {
            get {
                return this.priorityField;
            }
            set {
                if ((object.ReferenceEquals(this.priorityField, value) != true)) {
                    this.priorityField = value;
                    this.RaisePropertyChanged("priority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string status {
            get {
                return this.statusField;
            }
            set {
                if ((object.ReferenceEquals(this.statusField, value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string subject {
            get {
                return this.subjectField;
            }
            set {
                if ((object.ReferenceEquals(this.subjectField, value) != true)) {
                    this.subjectField = value;
                    this.RaisePropertyChanged("subject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string time {
            get {
                return this.timeField;
            }
            set {
                if ((object.ReferenceEquals(this.timeField, value) != true)) {
                    this.timeField = value;
                    this.RaisePropertyChanged("time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TMSService.ITMSServices")]
    public interface ITMSServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITMSServices/InsertUser", ReplyAction="http://tempuri.org/ITMSServices/InsertUserResponse")]
        string InsertUser(TMSWebClient.TMSService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITMSServices/InsertUser", ReplyAction="http://tempuri.org/ITMSServices/InsertUserResponse")]
        System.Threading.Tasks.Task<string> InsertUserAsync(TMSWebClient.TMSService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITMSServices/getUsers", ReplyAction="http://tempuri.org/ITMSServices/getUsersResponse")]
        System.Data.DataSet getUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITMSServices/getUsers", ReplyAction="http://tempuri.org/ITMSServices/getUsersResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> getUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITMSServices/loginUser", ReplyAction="http://tempuri.org/ITMSServices/loginUserResponse")]
        bool loginUser(TMSWebClient.TMSService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITMSServices/loginUser", ReplyAction="http://tempuri.org/ITMSServices/loginUserResponse")]
        System.Threading.Tasks.Task<bool> loginUserAsync(TMSWebClient.TMSService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITMSServices/AddTask", ReplyAction="http://tempuri.org/ITMSServices/AddTaskResponse")]
        bool AddTask(TMSWebClient.TMSService.Task task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITMSServices/AddTask", ReplyAction="http://tempuri.org/ITMSServices/AddTaskResponse")]
        System.Threading.Tasks.Task<bool> AddTaskAsync(TMSWebClient.TMSService.Task task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITMSServices/getTasks", ReplyAction="http://tempuri.org/ITMSServices/getTasksResponse")]
        System.Data.DataSet getTasks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITMSServices/getTasks", ReplyAction="http://tempuri.org/ITMSServices/getTasksResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> getTasksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITMSServices/GetUser", ReplyAction="http://tempuri.org/ITMSServices/GetUserResponse")]
        TMSWebClient.TMSService.Task GetUser(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITMSServices/GetUser", ReplyAction="http://tempuri.org/ITMSServices/GetUserResponse")]
        System.Threading.Tasks.Task<TMSWebClient.TMSService.Task> GetUserAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITMSServices/updateUser", ReplyAction="http://tempuri.org/ITMSServices/updateUserResponse")]
        bool updateUser(TMSWebClient.TMSService.Task t, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITMSServices/updateUser", ReplyAction="http://tempuri.org/ITMSServices/updateUserResponse")]
        System.Threading.Tasks.Task<bool> updateUserAsync(TMSWebClient.TMSService.Task t, string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITMSServices/deleteUser", ReplyAction="http://tempuri.org/ITMSServices/deleteUserResponse")]
        bool deleteUser(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITMSServices/deleteUser", ReplyAction="http://tempuri.org/ITMSServices/deleteUserResponse")]
        System.Threading.Tasks.Task<bool> deleteUserAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITMSServices/userTasks", ReplyAction="http://tempuri.org/ITMSServices/userTasksResponse")]
        System.Data.DataSet userTasks(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITMSServices/userTasks", ReplyAction="http://tempuri.org/ITMSServices/userTasksResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> userTasksAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITMSServices/getId", ReplyAction="http://tempuri.org/ITMSServices/getIdResponse")]
        string getId(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITMSServices/getId", ReplyAction="http://tempuri.org/ITMSServices/getIdResponse")]
        System.Threading.Tasks.Task<string> getIdAsync(string email);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITMSServicesChannel : TMSWebClient.TMSService.ITMSServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TMSServicesClient : System.ServiceModel.ClientBase<TMSWebClient.TMSService.ITMSServices>, TMSWebClient.TMSService.ITMSServices {
        
        public TMSServicesClient() {
        }
        
        public TMSServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TMSServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TMSServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TMSServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string InsertUser(TMSWebClient.TMSService.User user) {
            return base.Channel.InsertUser(user);
        }
        
        public System.Threading.Tasks.Task<string> InsertUserAsync(TMSWebClient.TMSService.User user) {
            return base.Channel.InsertUserAsync(user);
        }
        
        public System.Data.DataSet getUsers() {
            return base.Channel.getUsers();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getUsersAsync() {
            return base.Channel.getUsersAsync();
        }
        
        public bool loginUser(TMSWebClient.TMSService.User user) {
            return base.Channel.loginUser(user);
        }
        
        public System.Threading.Tasks.Task<bool> loginUserAsync(TMSWebClient.TMSService.User user) {
            return base.Channel.loginUserAsync(user);
        }
        
        public bool AddTask(TMSWebClient.TMSService.Task task) {
            return base.Channel.AddTask(task);
        }
        
        public System.Threading.Tasks.Task<bool> AddTaskAsync(TMSWebClient.TMSService.Task task) {
            return base.Channel.AddTaskAsync(task);
        }
        
        public System.Data.DataSet getTasks() {
            return base.Channel.getTasks();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> getTasksAsync() {
            return base.Channel.getTasksAsync();
        }
        
        public TMSWebClient.TMSService.Task GetUser(string id) {
            return base.Channel.GetUser(id);
        }
        
        public System.Threading.Tasks.Task<TMSWebClient.TMSService.Task> GetUserAsync(string id) {
            return base.Channel.GetUserAsync(id);
        }
        
        public bool updateUser(TMSWebClient.TMSService.Task t, string id) {
            return base.Channel.updateUser(t, id);
        }
        
        public System.Threading.Tasks.Task<bool> updateUserAsync(TMSWebClient.TMSService.Task t, string id) {
            return base.Channel.updateUserAsync(t, id);
        }
        
        public bool deleteUser(string id) {
            return base.Channel.deleteUser(id);
        }
        
        public System.Threading.Tasks.Task<bool> deleteUserAsync(string id) {
            return base.Channel.deleteUserAsync(id);
        }
        
        public System.Data.DataSet userTasks(string id) {
            return base.Channel.userTasks(id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> userTasksAsync(string id) {
            return base.Channel.userTasksAsync(id);
        }
        
        public string getId(string email) {
            return base.Channel.getId(email);
        }
        
        public System.Threading.Tasks.Task<string> getIdAsync(string email) {
            return base.Channel.getIdAsync(email);
        }
    }
}
